my_data <- read.csv("dataset.csv")
my_data <- read.csv("WhitbyData")
my_data <- read.csv("~/Desktop/4ui9QOb2TrGDMM6uAp55bg_0e3b2538bb3f4385a38fe723de5fa6e1_RStudio_1")
> my_data <- read.csv("/Desktop/4ui9QOb2TrGDMM6uAp55bg_0e3b2538bb3f4385a38fe723de5fa6e1_RStudio_1/WhitbyData.csv")
my_data <- read.csv("/Desktop/4ui9QOb2TrGDMM6uAp55bg_0e3b2538bb3f4385a38fe723de5fa6e1_RStudio_1/WhitbyData.csv")
my_data <- read.csv("Home/Desktop/4ui9QOb2TrGDMM6uAp55bg_0e3b2538bb3f4385a38fe723de5fa6e1_RStudio_1/WhitbyData.csv")
library(readr)
WhitbyData <- read_csv("Desktop/4ui9QOb2TrGDMM6uAp55bg_0e3b2538bb3f4385a38fe723de5fa6e1_RStudio_1/WhitbyData.csv")
View(WhitbyData)
pch=16
xlim=c(a,b)
ylim=c(d,e)
plot(Whitby$TempMIN, Whitby$TempMAX,xlim=c(-5,25), ylim=c(-5,25), xlab="Minimum temperature",ylab="Maximum temperature")
xlab="axis label"
install.packages("ISLR")
install.packages('rsconnect')
rsconnect::setAccountInfo(name='sofiya',
token='89F12FE1C4F7F9983F8E54A7359AA2CC',
secret='l0khWw/jPGy7se7AlOiLkFkv3RcLxc8shxSOUnC4')
rsconnect::setAccountInfo(name='sofiya', token='89F12FE1C4F7F9983F8E54A7359AA2CC', secret='l0khWw/jPGy7se7AlOiLkFkv3RcLxc8shxSOUnC4')
rsconnect::setAccountInfo(name='sofiya', token='89F12FE1C4F7F9983F8E54A7359AA2CC', secret='l0khWw/jPGy7se7AlOiLkFkv3RcLxc8shxSOUnC4')
install.packages("curl", type = "source")
rsconnect::setAccountInfo(name='sofiya',
token='89F12FE1C4F7F9983F8E54A7359AA2CC',
secret='l0khWw/jPGy7se7AlOiLkFkv3RcLxc8shxSOUnC4')
renv::install("curl@6.2.3")
install.packages("openssl", type = "source")
install.packages("curl",    type = "source")
library(openssl); packageVersion("openssl")
library(curl);    packageVersion("curl")
rsconnect::setAccountInfo(name='sofiya',
token='89F12FE1C4F7F9983F8E54A7359AA2CC',
secret='l0khWw/jPGy7se7AlOiLkFkv3RcLxc8shxSOUnC4')
install.packages('rsconnect')
library(rsconnect)
rsconnect::setAccountInfo(name='sofiya',
token='89F12FE1C4F7F9983F8E54A7359AA2CC',
secret='l0khWw/jPGy7se7AlOiLkFkv3RcLxc8shxSOUnC4')
rsconnect::setAccountInfo(name="sofiya", token="89F12FE1C4F7F9983F8E54A7359AA2CC", secret="l0khWw/jPGy7se7AlOiLkFkv3RcLxc8shxSOUnC4")
rsconnect::setAccountInfo(name='sofiya', token='89F12FE1C4F7F9983F8E54A7359AA2CC', secret='l0khWw/jPGy7se7AlOiLkFkv3RcLxc8shxSOUnC4')
> rsconnect::setAccountInfo(name='sofiya', token='89F12FE1C4F7F9983F8E54A7359AA2CC', secret='l0khWw/jPGy7se7AlOiLkFkv3RcLxc8shxSOUnC4')
> rsconnect::setAccountInfo(name='sofiya', token='89F12FE1C4F7F9983F8E54A7359AA2CC', secret='l0khWw/jPGy7se7AlOiLkFkv3RcLxc8shxSOUnC4')
rsconnect::setAccountInfo(name='sofiya', token='89F12FE1C4F7F9983F8E54A7359AA2CC', secret='l0khWw/jPGy7se7AlOiLkFkv3RcLxc8shxSOUnC4')
library(rsconnect)
rsconnect::deployApp('path/to/your/app')
x <- c(2,7,5)
y <- seq(from=4,length=3,by=3)
my.data <- as.data.frame(cbind(x,y))
x = runif(50) #random values from uniform distribution
y = rnorm(50) #random from normal distributions
plot(x,y)
Auto <- read.csv("~/IntroDataScience/ISLRBook/Data/Auto.csv") #give correct path
setwd("~/Downloads")
setwd("~/")
Auto <- read.csv("~/Auto.csv") #give correct path
Auto <- read.csv("~/Auto.csv") #give correct path
Auto <- read.csv("~/Downloads/Auto.csv") #give correct path
fit <- lm(dist ~ speed, data = cars)
b   <- coef(fit)
plot(cars)
abline(fit)
b
---
title: "Example1"
fit <- lm(dist ~ speed, data = cars)
b   <- coef(fit)
plot(cars)
abline(fit)
b
tinytex::install_tinytex()
\
library(rsconnect)
rsconnect::deployApp('~/Downloads')
setwd("~/")
setwd("~/Downloads/Stanford")
library(rsconnect)rsconnect::deployApp('~/Downloads')
library(rsconnect)
rsconnect::deployApp('~/Downloads/Stanford')
x
x
source("~/Downloads/Stanford/IntroTo.R")
source("~/Downloads/Stanford/IntroTo.R")
x
x+y
#if x and y are the same length, we can add it
x+y
source("~/Downloads/Stanford/IntroTo.R")
#vectors
x = c(1, 3, 4)
y = c(2, 6, 8)
#if x and y are the same length, we can add it
x+y
#vectors
x = c(1, 3, 4)
y = c(2, 6, 8)
#if x and y are the same length, we can add it and it will add the first number from x to the first number from y, and so on.
x+y
ls()
?matriz
?matrix
a = matrix (data=c(1,2,3,4), nrow=2, ncol=2)
a
source("~/Downloads/Stanford/IntroTo.R")
source("~/Downloads/Stanford/IntroTo.R")
a = matrix (data=c(1,2,3,4), nrow=2, ncol=2, byrow=TRUE) #or just matrix(c(1,2,3,4) ,2,2)
a
#because of byrow=TRUE it numerates like 1st row, then 2nd row. As default it makes it by columns
sqrt(a) #returns matrix with sqrt of each value
a^2 #returns matrix with each value being in the power
?rnorm
c = rnorm(50) #by default creates standard normal random variables with a mean of 0 and a standard deviation of 1; 50 is sample size
d = rnorm(50, mean=50, sd=.1) #the mean and standard deviation can be altered using the mean and sd arguments
cor(c, d)
?set.seed()
plot(x, y)
sqrt(var(x)) #= sd(e) which is standard deviation
plot(x, y)
#BASIC COMMANDS
#vectors
x = c(1, 3, 4)
y = c(2, 6, 8)
#if x and y are the same length, we can add it and it will add the first number from x to the first number from y, and so on.
x+y
ls() #shows everything that we have now
rm(x, y) #deletes something we don't need OR use rm(list=ls()) to delete everything
a = matrix (data=c(1,2,3,4), nrow=2, ncol=2, byrow=TRUE) #or just matrix(c(1,2,3,4) ,2,2)
a
#because of byrow=TRUE it numerates like 1st row, then 2nd row. As default it makes it by columns
sqrt(a) #returns matrix with sqrt of each value
a^2 #returns matrix with each value being in the power of 2
c = rnorm(50) #by default creates standard normal random variables with a mean of 0 and a standard deviation of 1; 50 is sample size
d = rnorm(50, mean=50, sd=.1) #the mean and standard deviation can be altered using the mean and sd arguments
cor(c, d) #shows correlation between them
set.seed(3) #this command allows us to generate the same random number each time we generate random number
x = rnorm(5)
mean(x) #compute the mean of vector e
var(x) #computes the дисперсия (variance) of vector e
sqrt(var(x)) #= sd(e) which is standard deviation
# GRAPHICS
plot(x, y)
cor(c, y) #shows correlation between them
#BASIC COMMANDS
#vectors
x = c(1, 3, 4)
y = c(2, 6, 8)
#if x and y are the same length, we can add it and it will add the first number from x to the first number from y, and so on.
x+y
ls() #shows everything that we have now
rm(x, y) #deletes something we don't need OR use rm(list=ls()) to delete everything
a = matrix (data=c(1,2,3,4), nrow=2, ncol=2, byrow=TRUE) #or just matrix(c(1,2,3,4) ,2,2)
a
#because of byrow=TRUE it numerates like 1st row, then 2nd row. As default it makes it by columns
sqrt(a) #returns matrix with sqrt of each value
a^2 #returns matrix with each value being in the power of 2
c = rnorm(50) #by default creates standard normal random variables with a mean of 0 and a standard deviation of 1; 50 is sample size
y = rnorm(50, mean=50, sd=.1) #the mean and standard deviation can be altered using the mean and sd arguments
cor(c, y) #shows correlation between them
set.seed(3) #this command allows us to generate the same random number each time we generate random number
x = rnorm(5)
mean(x) #compute the mean of vector e
var(x) #computes the дисперсия (variance) of vector e
sqrt(var(x)) #= sd(e) which is standard deviation
# GRAPHICS
plot(x, y)
source("~/Downloads/Stanford/IntroTo.R")
a = matrix (data=c(1,2,3,4), nrow=2, ncol=2, byrow=TRUE) #or just matrix(c(1,2,3,4) ,2,2)
plot(x, y)
plot(x,y,xlab="this is the x-axis",ylab="this is the y-axis",
main="Plot of X vs Y")
source("~/Downloads/Stanford/IntroTo.R")
pdf("Figure.pdf")
plot(x,y,xlab="this is the x-axis",ylab="this is the y-axis",
main="Plot of X vs Y", col="green")
dev.off
pdf("Figure.pdf")
plot(x,y,xlab="this is the x-axis",ylab="this is the y-axis",
main="Plot of X vs Y", col="green")
dev.off
pdf("Figure.pdf")
plot(x,y, col="green")
pdf("Figure.pdf")
plot(x,y, col="green")
dev.off()
source("~/Downloads/Stanford/IntroTo.R")
